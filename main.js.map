{"version":3,"sources":["./src/app/messagecenter/messagecenter.component.ts","./src/app/register/register.component.css","./src/app/helper/DnsHelper.ts","./src/app/authentication.service.ts","./src/app/register/register.component.ts","./src/app/main/main.component.html","./src/app/add-card/add-card.component.html","./src/app/imprint/imprint.component.html","./src/app/app.component.css","./src/app/main/main.component.css","./src/environments/environment.ts","./src/app/model/message.ts","./src/app/error404/error404.component.css","./src/app/register/register.component.html","./src/app/add-card/add-card.component.ts","./src/app/messagecenter/messagecenter.component.css","./src/app/app.component.ts","./src/app/app.component.html","./src/app/profile/profile.component.ts","./src/app/card/card.component.html","./src/app/model/communication.ts","./src/app/error404/error404.component.ts","./src/app/add-card/add-card.component.css","./src/app/app.module.ts","./src/app/model/commodity.ts","./src/app/imprint/imprint.component.css","./src/app/card/card.component.css","./src/$_lazy_route_resource lazy namespace object","./src/app/profile/profile.component.css","./src/app/messagecenter/messagecenter.component.html","./src/app/login/login.component.html","./src/app/imprint/imprint.component.ts","./src/app/model/user.ts","./src/app/error404/error404.component.html","./src/app/card/card.component.ts","./src/app/login/login.component.css","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/main/main.component.ts","./src/app/profile/profile.component.html","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { User } from '../model/user';\nimport { Communication } from '../model/communication';\nimport { Message } from '../model/message';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { DnsHelper } from '../helper/DnsHelper';\n\n@Component({\n  selector: 'app-messagecenter',\n  templateUrl: './messagecenter.component.html',\n  styleUrls: ['./messagecenter.component.css']\n})\nexport class MessagecenterComponent implements OnInit {\n\n  communication: Communication;\n  messageInput: FormControl = new FormControl('');\n  currentUserUuid: string;\n\n  constructor(private appComponent: AppComponent, private http: HttpClient) {\n    appComponent.setCurrentMessageCenter(this);\n  }\n\n  ngOnInit() {\n    this.currentUserUuid = this.appComponent.getCurrCookieUserId();\n\n    // TODO Angular Server-Sent Events (SSE)\n    this.communication = new Communication();\n\n    // const requester: User = this.appComponent.getCurrCookieUserOrNull();\n    // const responder: User = this.appComponent.getCurrCookieUserOrNull();\n    // this.communication.requesterName = requester.name;\n    // this.communication.responderName = responder.name;\n  }\n\n  public setNewCommunication(communication : Communication){\n    this.communication = communication;\n    this.relaodAllMessages();\n  }\n\n  private relaodAllMessages()\n  {\n    const httpsHeaders: HttpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'cache-control': 'no-cache'\n    });\n    const httpOpt = {\n      headers: httpsHeaders\n    };\n\n    let commClone : Communication = Object.create(this.communication);\n    commClone.commUuid = this.communication.commUuid;\n    commClone.requesterName = this.communication.requesterName;\n    commClone.responderName = this.communication.responderName;\n    commClone.communicationPartnerName = this.communication.communicationPartnerName;\n    commClone.commodityId = this.communication.commodityId;\n    commClone.messages = this.communication.messages;\n\n    commClone.currentRequestingUserUuid = this.currentUserUuid;\n\n    const resp = this.http.get(\n      new DnsHelper().url +\n      '/api/communication/' + this.communication.commUuid +\n      '?useruuid=' + this.currentUserUuid\n    );\n    resp.subscribe(result => {      \n      const resultMessages: unknown = result as unknown;\n      this.communication.messages = resultMessages as Message[];\n    });\n  }\n\n  sendMessage(event: Event) {\n    let requesterUuId: string = this.appComponent.getCurrCookieUserId();\n    let commodityId: string = this.communication.commodityId;\n\n    let messageToSend: Message = new Message();\n    messageToSend.messageText = this.messageInput.value;\n    messageToSend.communicationUuid = this.communication.commUuid;\n    messageToSend.messageOwnerUuid = requesterUuId;\n    messageToSend.commodityId = commodityId;\n\n    // this.communication.messages.push(messageToSend);\n    this.messageInput.setValue(\"\");\n\n    const httpsHeaders: HttpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'cache-control': 'no-cache'\n    });\n    const httpOpt = {\n      headers: httpsHeaders\n    };\n\n    const resp2 = this.http.put<Message>(\n      new DnsHelper().url + '/api/communication',\n      messageToSend, httpOpt\n    );\n    resp2.subscribe(result => {\n      this.relaodAllMessages();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\";","import { isDevMode } from '@angular/core';\r\n\r\nexport class DnsHelper {\r\n\r\n    public url : string;\r\n\r\n    constructor(){\r\n        if(isDevMode()){\r\n            // this.url = \"http://127.0.0.1:5001\";  // Test\r\n            this.url = \"http://localhost:5001\";  // Test\r\n        } else {\r\n            this.url  = \"http://192.168.0.178:5001\";  // Produktion\r\n        }    \r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Commodity } from './model/commodity';\nimport { User } from './model/user';\nimport { DnsHelper } from './helper/DnsHelper';\n\nconst httpOpt = {\n  headers: new HttpHeaders({ 'ContentType': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  getUserAttr(loginName: string, password: string) {\n\n    /*\n    const httpsHeaders: HttpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'cache-control': 'no-cache'\n    });\n    const httpOpt = {\n      headers: httpsHeaders\n    };\n\n    const user: User = new User();\n    user.loginName = loginName;\n    user.passphrase = password;\n    */\n\n    return this.http.get(\n      new DnsHelper().url + '/api/user?loginname=' + loginName + '&passphrase=' + password\n    );\n\n    // return this.http.get(new DnsHelper().url + '/api/user/user?loginName=' +\n    // loginName + '&passphrase=' + password);\n\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../model/user';\nimport { AppComponent } from '../app.component';\nimport { FormControl, Validators } from '@angular/forms';\nimport { DnsHelper } from '../helper/DnsHelper';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  username: FormControl = new FormControl('', [Validators.required]);\n  email: FormControl = new FormControl('', [Validators.required, Validators.email]);\n  passphrase: FormControl = new FormControl('', [Validators.required]);\n\n  constructor(private http: HttpClient, private appComponent: AppComponent) { }\n\n  ngOnInit() {\n    // TODO Payment:\n    // https://dev.to/ashinzekene/creating-an-angular-shopping-app-and-integrating-payments-using-rave-418l\n    const currUser: User = this.appComponent.getCurrCookieUserOrNull();\n    this.username.setValue(currUser.name);\n  }\n\n  registerTheUser(event: Event) {\n    event.preventDefault();\n\n    const currUserId: string = this.appComponent.getCurrCookieUserId();\n\n    const user: User = new User();\n    user.uuId = currUserId;\n    user.name = this.username.value;\n    user.loginName = this.email.value;\n    user.passphrase = this.passphrase.value;\n\n    const resp1 = this.http.post<User>(\n      new DnsHelper().url + '/api/user/',\n      user, {\n        headers: {\n          'Content-Type': 'application/json',\n          'cache-control': 'no-cache'\n        }\n      }\n    );\n    resp1.subscribe(result => {\n      const resUser: User = result as User;\n      this.appComponent.setCurrUserCookie(resUser);\n    });\n\n  }\n\n  getErrorMessage(){\n    return this.email.hasError('reqired') ? 'Sie müssen einen Wert eingeben' :\n        this.email.hasError('email') ? 'Keine gültige E-Mail-Adresse' : '';\n  }\n\n}\n","export default \"<p style=\\\"margin:2em;\\\">{{helloString}}</p>\\n<div fxLayout=\\\"row wrap padding\\\">\\n  <app-add-card *ngIf=\\\"displayAddCard\\\" fxFlex.xs=\\\"100\\\" fxFlex=\\\"33\\\" fxFlex.md=\\\"33\\\" fxFlex.sm=\\\"50\\\" fxLayout=\\\"column\\\">\\n  </app-add-card>\\n  <app-card *ngFor=\\\"let commodity of appComponent.commodities\\\" [cardCommodity]=\\\"commodity\\\" fxFlex.xs=\\\"100\\\" fxFlex=\\\"33\\\"\\n    fxFlex.md=\\\"33\\\" fxFlex.sm=\\\"50\\\" fxLayout=\\\"column\\\"></app-card>\\n</div>\\n<button mat-fab id=\\\"share_button\\\" (click)=\\\"displayShareItem($event)\\\">\\n  <i class=\\\"material-icons\\\">add</i>\\n</button>\";","export default \"<div fxLayout=\\\"column\\\" fxFlex.xs=\\\"auto\\\" >\\n  <mat-card>\\n    <video mat-card-image width=\\\"640\\\" height=\\\"480\\\" id=\\\"vid\\\" autoplay class=\\\"mat-card-image-style\\\"></video>\\n    <canvas id=\\\"canvas1\\\" width=\\\"640\\\" height=\\\"480\\\" style=\\\"width: 100%;display: none;height: 20em;\\\"></canvas>\\n    <mat-card-actions>\\n      <button (click)=\\\"takePicture($event)\\\" mat-button>TEILEN</button>\\n      <button (click)=\\\"cancelNewCommodity($event)\\\" mat-button>ABBRECHEN</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\\n\";","export default \"<div fxLayout=\\\"row wrap padding\\\">\\n    <div fxFlex.xs=\\\"auto\\\" fxFlex.gt.xs=\\\"50\\\" fxFlex=\\\"33\\\" fxFlex.gt.md=\\\"33\\\" fxLayout=\\\"column\\\" style=\\\"padding:20px;\\\">\\n        <mat-card style=\\\"box-shadow:0 0 0 0\\\">\\n          <mat-card-title>Standort</mat-card-title>\\n          <p><span style=\\\"color:green;\\\">sharty</span> ist ein non-for-profit \\\"Garagen-Projekt\\\", das in der Freizeit\\n            neben einem Vollzeitjob als Hobby entstanden ist. Daher kann keine Garantie f&uuml;r irgendeine\\n            Funktionalit&auml;t &uuml;bernommen werden. Verwendung zu eigenem Vergn&uuml;gen und auf eigene Gefahr.</p>\\n            <p>Der Standort des <span style=\\\"color:green;\\\">sharty</span>-Servers ist <i>Steckborn, Schweiz</i></p>\\n        </mat-card>\\n    </div>\\n\\n    <div fxFlex.xs=\\\"auto\\\" fxFlex.gt.xs=\\\"50\\\" fxFlex=\\\"33\\\" fxFlex.gt.md=\\\"33\\\" fxLayout=\\\"column\\\" style=\\\"padding:20px;\\\">\\n        <mat-card style=\\\"box-shadow:0 0 0 0\\\">\\n          <mat-card-title>Datenschutz</mat-card-title>\\n          <p>Die Betreiber dieser Seiten nehmen den Schutz Ihrer persönlichen Daten sehr ernst. Wir behandeln Ihre personenbezogenen\\n              Daten vertraulich und entsprechend der gesetzlichen Datenschutzvorschriften sowie dieser Datenschutzerklärung.</p>\\n\\n          <p>Die Nutzung unserer Webseite ist in der Regel ohne Angabe personenbezogener Daten möglich. Soweit auf unseren\\n              Seiten personenbezogene Daten (beispielsweise Name, Anschrift oder E-Mail-Adressen) erhoben werden, erfolgt\\n              dies, soweit möglich, stets auf freiwilliger Basis. Diese Daten werden ohne Ihre ausdrückliche Zustimmung\\n              nicht an Dritte weitergegeben.</p>\\n\\n          <p>Wir weisen darauf hin, dass die Datenübertragung im Internet (z.B. bei der Kommunikation per E-Mail) Sicherheitslücken\\n              aufweisen kann. Ein lückenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht möglich.</p>\\n\\n        </mat-card>\\n    </div>\\n\\n    <div fxFlex.xs=\\\"auto\\\" fxFlex.gt.xs=\\\"50\\\" fxFlex=\\\"33\\\" fxFlex.gt.md=\\\"33\\\" fxLayout=\\\"column\\\" style=\\\"padding:20px;\\\">\\n        <mat-card style=\\\"box-shadow:0 0 0 0\\\">\\n          <mat-card-title>Server-Log-Files</mat-card-title>\\n          <p>Der Provider der Seiten erhebt und speichert automatisch Informationen in so genannten Server-Log Files,\\n              die Ihr Browser automatisch an uns übermittelt. Dies sind:</p>\\n              <ul>\\n                  <li>Browsertyp und Browserversion</li>\\n                  <li>verwendetes Betriebssystem</li>\\n                  <li>Referrer URL</li>\\n                  <li>Hostname des zugreifenden Rechners</li>\\n                  <li>Uhrzeit der Serveranfrage</li>\\n              </ul>\\n          <p>Diese Daten sind nicht bestimmten Personen zuordenbar. Eine Zusammenführung dieser Daten mit anderen Datenquellen\\n              wird nicht vorgenommen. Wir behalten uns vor, diese Daten nachträglich zu prüfen, wenn uns konkrete Anhaltspunkte\\n              für eine rechtswidrige Nutzung bekannt werden.</p>\\n        </mat-card>\\n    </div>\\n\\n    <div fxFlex.xs=\\\"auto\\\" fxFlex.gt.xs=\\\"50\\\" fxFlex=\\\"33\\\" fxFlex.gt.md=\\\"33\\\" fxLayout=\\\"column\\\" style=\\\"padding:20px;\\\">\\n        <mat-card style=\\\"box-shadow:0 0 0 0\\\">\\n          <mat-card-title>&Uuml;bertragung Nutzungsrechte</mat-card-title>\\n          <p>Durch das Hochladen und Eingeben von Informationen und Medien (Fotos etc.) &uuml;bertragen\\n              Sie stillschweigend die Nutzungsrechte an allen diesen Informationen und Medien an\\n              <span style=\\\"color:green;\\\">sharty</span>. Diese Informationen und Medien k&ouml;nnen von \\n              <span style=\\\"color:green;\\\">sharty</span> zu jedem beliebigen Zweck verwendet werden.</p>\\n        </mat-card>\\n    </div>\\n\\n</div>\\n\";","export default \"#mainbox {\\n    height: 100%;\\n}\\n\\nmat-toolbar {\\n    background-color: #2a3a44;\\n}\\n\\n.logo_button {\\n    color: lightgreen;\\n    text-decoration: none;\\n    font-weight: lighter;\\n    font-style: italic;\\n    font-size: 120%;\\n}\\n\\n.logo_subtitle {\\n    color: white;\\n    text-decoration: none;\\n    font-weight: lighter;\\n    font-size: 80%;\\n}\\n\\n.align-right-spacer {\\n    flex: 1 1 auto;\\n}\\n\\nmat-sidenav-container {\\n    position: absolute;\\n    width: 100%;\\n    height: 90%;\\n    background-color: white;\\n}\\n\\nmat-sidenav-content {\\n    height:100%;\\n}\\n\\nmat-nav-list {\\n    padding: 1.5em;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFDQTtJQUNJLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUNBO0lBQ0ksWUFBWTtJQUNaLHFCQUFxQjtJQUNyQixvQkFBb0I7SUFDcEIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFdBQVc7SUFDWCx1QkFBdUI7QUFDM0I7O0FBQ0E7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI21haW5ib3gge1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxubWF0LXRvb2xiYXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyYTNhNDQ7XG59XG4ubG9nb19idXR0b24ge1xuICAgIGNvbG9yOiBsaWdodGdyZWVuO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgZm9udC1zaXplOiAxMjAlO1xufVxuLmxvZ29fc3VidGl0bGUge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gICAgZm9udC1zaXplOiA4MCU7XG59XG5cbi5hbGlnbi1yaWdodC1zcGFjZXIge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xufVxuXG5tYXQtc2lkZW5hdi1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDkwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cbm1hdC1zaWRlbmF2LWNvbnRlbnQge1xuICAgIGhlaWdodDoxMDAlO1xufVxuXG5tYXQtbmF2LWxpc3Qge1xuICAgIHBhZGRpbmc6IDEuNWVtO1xufVxuIl19 */\";","export default \"#share_button {\\n    margin: 1em;\\n    position: fixed;\\n    bottom: 0px;\\n    right: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxlQUFlO0lBQ2YsV0FBVztJQUNYLFVBQVU7QUFDZCIsImZpbGUiOiJtYWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjc2hhcmVfYnV0dG9uIHtcbiAgICBtYXJnaW46IDFlbTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgcmlnaHQ6IDBweDtcbn0iXX0= */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiServer: \"http://localhost:5000\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Communication } from \"./communication\";\r\n\r\nexport class Message {\r\n    id: string;\r\n    messageText: string;\r\n    communicationUuid: string;\r\n    messageOwnerUuid: string;\r\n    commodityId: string;\r\n    belongsThisUser: boolean;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlcnJvcjQwNC5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div fxFlex.xs=\\\"auto\\\" fxFlex.gt.xs=\\\"50\\\" fxFlex=\\\"33\\\" fxFlex.gt.md=\\\"33\\\" fxLayout=\\\"row\\\" style=\\\"padding:20px;\\\">\\n    <mat-card style=\\\"min-width:300px;min-height:100%;\\\">\\n        <mat-card-title>Registrieren</mat-card-title>\\n        <mat-card-content>\\n            <div style=\\\"display:flex;flex-direction:column;\\\">\\n                <mat-form-field>\\n                    <input matInput id=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"Benutzername\\\"\\n                        [formControl]=\\\"username\\\" required>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input matInput id=\\\"loginname\\\" type=\\\"text\\\" placeholder=\\\"E-Mail\\\"\\n                        [formControl]=\\\"email\\\" required>\\n                    <mat-error *ngIf=\\\"email.invalid\\\">{{ getErrorMessage() }}</mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input matInput [formControl]=\\\"passphrase\\\" id=\\\"password\\\"\\n                            type=\\\"password\\\" placeholder=\\\"Passwort\\\" required>\\n                </mat-form-field>\\n                <button routerLink='/' (click)=\\\"registerTheUser($event)\\\" mat-button>Registrieren</button>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n</div>\";","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Commodity } from '../model/commodity';\nimport { ShartyImage } from '../model/shartyimage';\nimport { MainComponent } from '../main/main.component';\nimport { AppComponent } from '../app.component';\nimport { DnsHelper } from '../helper/DnsHelper';\n\n@Component({\n  selector: 'app-add-card',\n  templateUrl: './add-card.component.html',\n  styleUrls: ['./add-card.component.css']\n})\nexport class AddCardComponent implements OnInit {\n\n  videoStream;\n\n  constructor(private http: HttpClient, private mainComp: MainComponent,\n    private appComponent: AppComponent) { }\n\n  ngOnInit() {\n\n    var videoConstraint = {\n      video: true\n    }\n\n    navigator.mediaDevices.getUserMedia(videoConstraint)\n      .then((videoStream) => {\n        this.videoStream = videoStream;\n        (<any>window).stream = videoStream;\n        (<any>window).vid.srcObject = (<any>window).stream;\n      }).catch((error) => {\n        alert(error);\n      });\n      \n  }\n\n  takePicture(event: Event) {\n\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition((loc: Position) => {\n\n        let vid: HTMLVideoElement = document.getElementById('vid') as HTMLVideoElement;\n        (<any>window).canvas = document.getElementById(\"canvas1\");\n        let canvas1: HTMLCanvasElement = (<any>window).canvas as HTMLCanvasElement;\n    \n        let canvasContext: CanvasRenderingContext2D = canvas1.getContext('2d');\n        canvasContext.\n          drawImage(vid, 0, 0, canvas1.width, canvas1.height);\n    \n        canvas1.toBlob((pic) => {\n          // let imgUrl = window.URL.createObjectURL(pic);\n    \n          // hier scheitert es:\n          // pic enthält nicht Bild sondern\n          // Text \"[object Blob]\":\n          let readBlob: FileReader = new FileReader();\n          readBlob.onload = () => {  \n            let picString: string = readBlob.result as string;\n            let img = new Image();\n            img.src = picString;\n            document.body.appendChild(img);\n    \n            let myImg: ShartyImage = {\n              data: btoa(picString)\n            }\n      \n            const resp1 = this.http.put<ShartyImage>(\n              new DnsHelper().url + '/api/image',\n              myImg, {\n                headers: {\n                  'Content-Type': 'application/json',\n                  'cache-control': 'no-cache'\n                }\n              }\n            );\n            resp1.subscribe(result => {\n              let newPicId: string = JSON.stringify(result);\n              let commodity: Commodity = new Commodity();\n              commodity.name = \"Wow5!\";\n              commodity.picUrl = newPicId;\n              let ownerUuid: string = this.appComponent.getCurrCookieUserId();\n              commodity.ownerUuid = ownerUuid;\n              commodity.latitude = loc.coords.latitude;\n              commodity.longitude = loc.coords.longitude;      \n              commodity.reportAbuse = 0;\n\n              const httpsHeaders: HttpHeaders = new HttpHeaders({\n                'Content-Type': 'application/json',\n                'cache-control': 'no-cache'\n              });\n              const httpOpt = {\n                headers: httpsHeaders\n              };\n        \n              const resp2 = this.http.put<Commodity>(\n                new DnsHelper().url + '/api/commodity',\n                commodity, httpOpt\n              );\n              resp2.subscribe(result => {\n              });\n            });\n          }\n          readBlob.readAsBinaryString(pic);\n      \n        },\n        \"image/jpeg\", 1.0\n        );\n      });\n    }\n\n    // let commodity: Commodity = new Commodity();\n    // commodity.name = \"Wow2!\";\n\n    /*\n    //this.mainComp.commodities[this.mainComp.commodities.length]\n    //      = commodity;\n\n    const httpsHeaders: HttpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'cache-control': 'no-cache'\n    });\n    const httpOpt = {\n      headers: httpsHeaders\n    };\n    const resp = this.http.post<Commodity>(\n      new DnsHelper().url + '/api/commodity',\n      commodity, httpOpt\n    );\n    resp.subscribe(result => {\n      console.log(\"AH: \" + JSON.stringify(result));  \n    });\n    */\n    \n  }\n\n  cancelNewCommodity(event: Event) {\n    this.mainComp.displayShareItem(event);\n  }\n\n  ngOnDestroy() {\n    this.videoStream.getTracks()[0].stop();\n  }\n\n}\n","export default \"mat-card {\\r\\n    margin: 0.5em;\\r\\n}\\r\\n\\r\\n.my-message {\\r\\n    background-color: lightblue;\\r\\n    margin-left: 40%;\\r\\n}\\r\\n\\r\\n.others-message {\\r\\n    background-color: lightgreen;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2VjZW50ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSwyQkFBMkI7SUFDM0IsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksNEJBQTRCO0FBQ2hDIiwiZmlsZSI6Im1lc3NhZ2VjZW50ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHtcclxuICAgIG1hcmdpbjogMC41ZW07XHJcbn1cclxuXHJcbi5teS1tZXNzYWdlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Ymx1ZTtcclxuICAgIG1hcmdpbi1sZWZ0OiA0MCU7XHJcbn1cclxuXHJcbi5vdGhlcnMtbWVzc2FnZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZWVuO1xyXG59Il19 */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { User } from './model/user';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Communication } from './model/communication';\nimport { MessagecenterComponent } from './messagecenter/messagecenter.component';\nimport { MainComponent } from './main/main.component';\nimport { Commodity } from './model/commodity';\nimport { DnsHelper } from './helper/DnsHelper';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  public title: string = 'sharty';\n\n  public cookieService: CookieService;\n  public currentUser: User;\n  private readonly cookieNameUser: string = 'sharty_user';\n\n  public contacts: Communication[];\n\n  public sideNavOpened: boolean;\n  public sideNavMode: string = 'side';\n  public isSideNavDisableClose: boolean = true;\n  private mediaWatcher: Subscription;\n  private messageCenter: MessagecenterComponent = null;\n\n  public commodities: Commodity[] = [];\n  public commoditiesAll: Commodity[] = [];\n\n  public isShowLikes: boolean;\n\n  constructor(cookieService: CookieService, private snckBar: MatSnackBar,\n    private http: HttpClient, public router: Router, oMedia: MediaObserver) {\n    this.cookieService = cookieService;\n    this.mediaWatcher = oMedia.asObservable().subscribe((mChange: MediaChange[]) => {\n      if (mChange[0].mqAlias === 'xs') {\n        this.sideNavMode = 'over';\n        this.isSideNavDisableClose = false;\n      } else {\n        this.sideNavMode = 'side';\n        this.isSideNavDisableClose = true;\n        this.sideNavOpened = true;\n      }\n    });\n    this.currentUser = new User();\n    this.currentUser.registered = false;\n\n    let currUser: User = this.getCurrCookieUserOrNull();\n\n    // create new user cookie if not exists:\n    if (currUser === undefined || currUser === null) {\n      this.createNewUserCookie();\n    } else {\n      // user cookie exists already:\n      this.loadContacts(currUser);\n    }\n    this.showCookieNotification();\n  }\n\n  ngOnInit() {\n  }\n\n  public getCurrCookieUserId(): string {\n    let currUser: User = this.getCurrCookieUserOrNull();\n    if (currUser !== undefined && currUser !== null) {\n      // set new or refresh date if already set:\n      this.setCurrUserCookie(currUser);\n      return currUser.uuId;\n    } else {\n      return '';\n    }\n  }\n\n  // Returns current User from cookie or null if no\n  // user has been written to the cookie so far (which should not\n  // be possible in \"normal\" operation).\n  public getCurrCookieUserOrNull(): User {\n    let currUserCookieString: string = this.cookieService.get(this.cookieNameUser)\n    let currUser: User = null;\n    if (currUserCookieString !== undefined && currUserCookieString !== null &&\n      currUserCookieString !== \"\") {\n      currUser = JSON.parse(currUserCookieString);\n      this.setCurrUserCookie(currUser);\n    }\n    return currUser;\n  }\n\n  // Replaces the current user cookie with the\n  // given user object.\n  public setCurrUserCookie(user: User) {\n    let expDate: Date = new Date();\n    expDate.setDate(expDate.getDate() + 365);\n    this.cookieService.set(this.cookieNameUser, JSON.stringify(user), expDate,\n                        null, null, false, \"Lax\");\n    this.currentUser = user;\n    this.loadContacts(user);\n  }\n\n  public setCurrentMessageCenter(messageCenter: MessagecenterComponent) {\n    this.messageCenter = messageCenter;\n  }\n\n  public openCommLink(event: Event, communication: Communication) {\n    this.openCommLinkInternal(communication);\n  }\n\n  private openCommLinkInternal(communication: Communication) {\n    if (this.messageCenter != null) {\n      this.messageCenter.setNewCommunication(communication);\n    }\n  }\n\n  public toggleSideNav(event: Event) {\n    if (!this.isSideNavDisableClose) {\n      this.sideNavOpened = !this.sideNavOpened;\n    }\n  }\n\n  public toggleShowLikes(event: Event){\n    this.commodities = [];\n    if(!this.isShowLikes){\n      for(let comm of this.commoditiesAll){\n        if(comm.likedByCurrentUser){\n          this.commodities.push(comm);\n        }\n      }      \n    } else {\n      for(let comm of this.commoditiesAll){\n          this.commodities.push(comm);\n      }      \n    }\n  }\n\n  public logout(event: Event) {\n    this.createNewUserCookie();\n    this.currentUser = this.getCurrCookieUserOrNull();\n  }\n\n  private loadContacts(currUser: User) {\n\n    /*\n    const httpsHeaders: HttpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'cache-control': 'no-cache'\n    });\n    const httpOpt = {\n      headers: httpsHeaders\n    };\n\n    let sendUser: User = new User();\n    sendUser.uuId = currUser.uuId;\n    */\n\n\n    const resp = this.http.get(\n      new DnsHelper().url + '/api/communication?useruuid=' + currUser.uuId\n    );\n    resp.subscribe(result => {\n      const communication: unknown = result as unknown;\n      this.contacts = communication as Communication[];\n      if (this.contacts.length != 0) {\n\n        for (let contact of this.contacts) {\n          this.setCommunicationPartnerName(contact, currUser.name)\n        }\n\n        if (this.contacts[0].requesterName == currUser.name) {\n          this.contacts[0].communicationPartnerName =\n            this.contacts[0].responderName;\n        } else {\n          this.contacts[0].communicationPartnerName =\n            this.contacts[0].requesterName;\n        }\n        this.openCommLinkInternal(this.contacts[0]);\n      }\n    });\n  }\n\n  private setCommunicationPartnerName(comm: Communication, currUserName: string) {\n    if (comm.requesterName == currUserName) {\n      comm.communicationPartnerName =\n        comm.responderName;\n    } else {\n      comm.communicationPartnerName =\n        comm.requesterName;\n    }\n  }\n\n  private createNewUserCookie() {\n    const httpsHeaders: HttpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'cache-control': 'no-cache'\n    });\n    const httpOpt = {\n      headers: httpsHeaders\n    };\n\n    const resp2 = this.http.put<User>(\n      new DnsHelper().url + '/api/user',\n      httpOpt\n    );\n    resp2.subscribe(result => {\n      const resUser: User = result as User;\n      this.setCurrUserCookie(resUser);\n    });\n  }\n\n  private showCookieNotification() {\n    const hideInfoCookieName: string = 'hide_info';\n    let hideInfoValue: string = this.cookieService.get(hideInfoCookieName);\n\n    if (hideInfoValue !== 'true') {\n      let snckBarHandle = this.snckBar.open('Diese App verwendet Cookies. Nähere Informationen im Impressum.',\n        'X', {\n        duration: 99999999999999\n      });\n      snckBarHandle.afterDismissed().subscribe(() => {\n        this.cookieService.set(hideInfoCookieName, 'true', 50 * 365, null, null, false, \"Lax\");\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    // deactivate watcher that identifies whether\n    // smartphone or desktop:\n    this.mediaWatcher.unsubscribe();\n  }\n\n}\n","export default \"<!--The content below is only a placeholder and can be replaced.-->\\n<div id=\\\"mainbox\\\">\\n  <mat-toolbar>\\n    <mat-toolbar-row>\\n      <button arial-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"toggleSideNav($event)\\\" style=\\\"color:white;\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>&nbsp;&nbsp;&nbsp;\\n      <span><a class=\\\"logo_button\\\" href=\\\"\\\">{{title}}</a></span>&nbsp;&nbsp;\\n      <span *ngIf=\\\"isSideNavDisableClose\\\" class=\\\"logo_subtitle\\\">Kostenloses in der Umgebung</span>\\n      <span class=\\\"align-right-spacer\\\"></span>\\n      <mat-icon [matMenuTriggerFor]=\\\"rightmenu\\\" style=\\\"color:white;\\\" aria-label=\\\"Submenu icon\\\"\\n        *ngIf=\\\"router.url == '/'\\\">more_vert</mat-icon>\\n      <mat-menu #rightmenu=\\\"matMenu\\\">\\n        <button mat-menu-item><mat-checkbox [(ngModel)]=\\\"isShowLikes\\\" (click)=\\\"toggleShowLikes($event)\\\">Nur Likes anzeigen</mat-checkbox></button>\\n        <button mat-menu-item><mat-checkbox>Nur Eigene anzeigen</mat-checkbox></button>\\n        <button mat-menu-item><mat-checkbox>Ausgeblendete anzeigen</mat-checkbox></button>\\n        <button mat-menu-item>Max. Entfernung</button>\\n      </mat-menu>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n  <mat-sidenav-container>\\n    <mat-sidenav *ngIf=\\\"router.url != '/messagecenter'\\\" [(opened)]=\\\"sideNavOpened\\\" #drawer\\n      [mode]=\\\"sideNavMode\\\" role=\\\"navigation\\\" [(disableClose)]=\\\"isSideNavDisableClose\\\">\\n      <mat-nav-list>\\n        <a mat-list-item routerLink='/messagecenter' (click)=\\\"toggleSideNav($event)\\\">\\n          <mat-icon aria-label=\\\"Nachrichten\\\">speaker_notes</mat-icon>&nbsp;Nachrichten\\n        </a>\\n        <a *ngIf=\\\"!currentUser.registered\\\" mat-list-item routerLink='/login'\\n              (click)=\\\"toggleSideNav($event)\\\">\\n          <mat-icon aria-label=\\\"Anmelden\\\">contacts</mat-icon>&nbsp;Anmelden\\n        </a>\\n        <a *ngIf=\\\"!currentUser.registered\\\"  mat-list-item routerLink='/register'\\n              (click)=\\\"toggleSideNav($event)\\\">\\n          <mat-icon aria-label=\\\"Registrieren\\\">contact_mail</mat-icon>&nbsp;Registrieren\\n        </a>\\n        <a mat-list-item routerLink='/profile' (click)=\\\"toggleSideNav($event)\\\">\\n          <mat-icon aria-label=\\\"Profil\\\">contact_mail</mat-icon>&nbsp;Profil\\n        </a>\\n        <a mat-list-item routerLink='/imprint' (click)=\\\"toggleSideNav($event)\\\">\\n          <mat-icon aria-label=\\\"Impressum\\\">star_border</mat-icon>&nbsp;Impressum\\n        </a>\\n        <a *ngIf=\\\"currentUser.registered\\\" mat-list-item routerLink='/'\\n              (click)=\\\"logout($event)\\\">\\n          <mat-icon aria-label=\\\"Logout\\\">arrow_right_alt</mat-icon>&nbsp;Logout\\n        </a>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav *ngIf=\\\"router.url == '/messagecenter'\\\" [(opened)]=\\\"sideNavOpened\\\" #drawer\\n      [mode]=\\\"sideNavMode\\\" role=\\\"navigation\\\" [(disableClose)]=\\\"isSideNavDisableClose\\\">\\n      <mat-nav-list>\\n        <button mat-mini-fab routerLink='/'>&lt;-</button>\\n        <a *ngFor=\\\"let contact of contacts\\\" id=\\\"{{contact.commUuid}}\\\" (click)=\\\"openCommLink($event, contact)\\\"\\n          mat-list-item>&nbsp;{{contact.communicationPartnerName}}</a>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content>\\n      <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\";","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { User } from '../model/user';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  userName: string = \"\";\n  loginName: string = \"\";\n  uuid: string = \"\";\n\n  constructor(private appComponent: AppComponent) { }\n\n  ngOnInit() {\n    const user: User = this.appComponent.getCurrCookieUserOrNull();\n    if(user !== null){\n      this.userName = user.name;\n      this.loginName = user.loginName;\n      this.uuid = user.uuId;  \n    }\n  }\n\n}\n","export default \"<mat-card>\\n    <img mat-card-image src=\\\"{{ picUrl }}\\\"\\n      alt=\\\"Bild {{ cardCommodity.picUrl }}.jpg kann nicht angezeigt werden.\\\" />\\n    <mat-card-content>\\n        <mat-chip-list>\\n          <mat-chip class=\\\"mat-chip-style\\\">\\n            Entfernung {{ cardCommodity.distanceToCurrentUser }} km\\n          </mat-chip>\\n        </mat-chip-list>\\n    </mat-card-content>\\n    <mat-divider></mat-divider>\\n    <mat-card-actions>\\n      <button *ngIf=\\\"belongsToCurrentUser\\\" mat-button matTooltip=\\\"Löschen\\\">\\n        <mat-icon aria-label=\\\"Clear\\\" class=\\\"icon-clear-style\\\">clear</mat-icon>\\n      </button>\\n      <button *ngIf=\\\"belongsToCurrentUser == false\\\" (click)=\\\"openMessage($event)\\\" mat-button matTooltip=\\\"Anbieter anschreiben\\\">\\n        <mat-icon aria-label=\\\"Contact\\\" class=\\\"icon-contact-style\\\">mail_outline</mat-icon>\\n      </button>\\n      <button mat-button matTooltip=\\\"Like\\\" (click)=\\\"likeCommodity($event)\\\">\\n        <mat-icon *ngIf=\\\"cardCommodity.likedByCurrentUser\\\" aria-label=\\\"Like\\\" class=\\\"icon-red-style\\\">\\n          favorite\\n        </mat-icon>\\n        <mat-icon *ngIf=\\\"cardCommodity.likedByCurrentUser == false\\\" aria-label=\\\"Like\\\" class=\\\"icon-red-style\\\">\\n          favorite_border\\n        </mat-icon>\\n      </button>\\n      <button *ngIf=\\\"belongsToCurrentUser == false\\\" \\n          (click)=\\\"reportAbuse($event)\\\" mat-button matTooltip=\\\"Missbrauch melden\\\">\\n        <mat-icon aria-label=\\\"Report\\\" class=\\\"icon-report-style\\\">warning</mat-icon>\\n      </button>\\n      <button mat-button matTooltip=\\\"Ausblenden\\\">\\n        <mat-icon aria-label=\\\"Unshow\\\" class=\\\"icon-unshow-style\\\">remove_red_eye</mat-icon>\\n     </button>\\n    </mat-card-actions>\\n</mat-card>\\n\";","import { User } from \"./user\";\r\nimport { Commodity } from \"./commodity\";\r\nimport { Message } from \"./message\";\r\n\r\nexport class Communication {\r\n    commUuid: string;\r\n    requesterName: string;\r\n    responderName: string;\r\n    communicationPartnerName: string;\r\n    commodityId: string;\r\n    messages: Message[];\r\n    currentRequestingUserUuid: string;\r\n\r\n    /**\r\n     * Copy method. Creates a shallow copy. Messages are not copied\r\n     * but only referenced.\r\n     */\r\n    public clone() : any\r\n    {\r\n        let commCopy : Communication = new Communication();\r\n        commCopy.commUuid = this.commUuid;\r\n        commCopy.requesterName = this.requesterName;\r\n        commCopy.responderName = this.responderName;\r\n        commCopy.communicationPartnerName = this.communicationPartnerName;\r\n        commCopy.commodityId = this.commodityId;\r\n        commCopy.messages = this.messages;\r\n        commCopy.currentRequestingUserUuid = this.currentRequestingUserUuid;\r\n        return commCopy;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error404',\n  templateUrl: './error404.component.html',\n  styleUrls: ['./error404.component.css']\n})\nexport class Error404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"mat-card {\\n    max-width: 400px;\\n    min-width: 400px;\\n    margin: 0.5em;\\n}\\n.mat-card-image-style {\\n    width: 100%;\\n    height: 20em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1jYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGFBQWE7QUFDakI7QUFDQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCIiwiZmlsZSI6ImFkZC1jYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICBtaW4td2lkdGg6IDQwMHB4O1xuICAgIG1hcmdpbjogMC41ZW07XG59XG4ubWF0LWNhcmQtaW1hZ2Utc3R5bGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMjBlbTtcbn0iXX0= */\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ImprintComponent } from './imprint/imprint.component';\nimport { MainComponent } from './main/main.component';\nimport { Error404Component } from './error404/error404.component';\nimport { CardComponent } from './card/card.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AddCardComponent } from './add-card/add-card.component';\nimport { MessagecenterComponent } from './messagecenter/messagecenter.component';\n\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImprintComponent,\n    MainComponent,\n    Error404Component,\n    CardComponent,\n    LoginComponent,\n    ProfileComponent,\n    AddCardComponent,\n    MessagecenterComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatChipsModule,\n    FlexLayoutModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Commodity {\n    id: string;\n    name: string;\n    ownerUuid: string;\n    picUrl: string;\n    reportAbuse: number;\n    likedByCurrentUser: boolean;\n    uuidOfCurrUserThatLikes: string;\n    latitude: number;\n    longitude: number;\n    distanceToCurrentUser: number;\n    belongsToCurretUser: boolean;\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbXByaW50LmNvbXBvbmVudC5jc3MifQ== */\";","export default \"mat-card {\\n    margin: 0.5em;\\n}\\n\\n.mat-chip-style {\\n    background-color: lightgreen;    \\n}\\n\\n.icon-clear-style {\\n    color: darkred;\\n}\\n\\n.icon-contact-style {\\n    color: darkgreen;\\n}\\n\\n.icon-red-style {\\n    color: red;\\n}\\n\\n.icon-report-style {\\n    color: orange;\\n}\\n\\n.icon-unshow-style {\\n    color: blue;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJjYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gICAgbWFyZ2luOiAwLjVlbTtcbn1cblxuLm1hdC1jaGlwLXN0eWxlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZWVuOyAgICBcbn1cblxuLmljb24tY2xlYXItc3R5bGUge1xuICAgIGNvbG9yOiBkYXJrcmVkO1xufVxuXG4uaWNvbi1jb250YWN0LXN0eWxlIHtcbiAgICBjb2xvcjogZGFya2dyZWVuO1xufVxuXG4uaWNvbi1yZWQtc3R5bGUge1xuICAgIGNvbG9yOiByZWQ7XG59XG5cbi5pY29uLXJlcG9ydC1zdHlsZSB7XG4gICAgY29sb3I6IG9yYW5nZTtcbn1cblxuLmljb24tdW5zaG93LXN0eWxlIHtcbiAgICBjb2xvcjogYmx1ZTtcbn1cblxuIl19 */\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div fxFlex.xs=\\\"auto\\\" fxFlex.gt.xs=\\\"50\\\" fxFlex=\\\"33\\\" fxFlex.gt.md=\\\"33\\\" fxLayout=\\\"row\\\" style=\\\"padding:20px;\\\">\\n    <mat-card style=\\\"min-width:300px;max-height:100%;\\\">\\n        <mat-card-content>\\n            <!-- <p>\\n                Requester name: {{ communication.requesterName }}<br />\\n                Responder name: {{ communication.responderName }}<br />\\n                Objekte: <br />\\n                Kommunikationen: {{ communication.commUuid }}<br />\\n                Nachrichten:<br />\\n              </p> -->\\n              <div *ngFor=\\\"let message of communication.messages\\\">\\n                <mat-chip-list>\\n                        <mat-chip *ngIf=\\\"message.belongsThisUser\\\" class=\\\"my-message\\\">\\n                            {{ message.messageText }}\\n                        </mat-chip>\\n                        <mat-chip *ngIf=\\\"!message.belongsThisUser\\\" class=\\\"others-message\\\">\\n                            {{ message.messageText }}\\n                        </mat-chip>\\n                </mat-chip-list>\\n            </div>\\n            <mat-form-field>\\n                <input matInput [formControl]=\\\"messageInput\\\" id=\\\"newmessage\\\" type=\\\"text\\\" placeholder=\\\"Nachricht...\\\">\\n            </mat-form-field>\\n            <button (click)=\\\"sendMessage($event)\\\" mat-button>Senden</button>\\n        </mat-card-content>\\n    </mat-card>\\n</div>\\n\";","export default \"<div fxFlex.xs=\\\"auto\\\" fxFlex.gt.xs=\\\"50\\\" fxFlex=\\\"33\\\" fxFlex.gt.md=\\\"33\\\" fxLayout=\\\"row\\\" style=\\\"padding:20px;\\\">\\n    <mat-card style=\\\"min-width:300px;min-height:100%;display:block;margin-left:auto;margin-right:auto;vertical-align:middle;\\\">\\n        <mat-card-title>Login</mat-card-title>\\n        <mat-card-content>\\n            <div style=\\\"display:flex;flex-direction:column;\\\">\\n                <mat-form-field>\\n                    <input matInput id=\\\"loginname\\\" type=\\\"text\\\" placeholder=\\\"E-Mail\\\"\\n                        [formControl]=\\\"email\\\" required>\\n                    <mat-error *ngIf=\\\"email.invalid\\\">{{ getErrorMessage() }}</mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input matInput [formControl]=\\\"passphrase\\\" id=\\\"password\\\"\\n                            type=\\\"password\\\" placeholder=\\\"Passwort\\\" required>\\n                </mat-form-field>\\n                <button routerLink='/' (click)=\\\"loginTheUser($event)\\\" mat-button>Login</button>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n</div>\\n\\n\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-imprint',\n  templateUrl: './imprint.component.html',\n  styleUrls: ['./imprint.component.css']\n})\nexport class ImprintComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class User {\r\n    uuId: string;\r\n    loginName: string;\r\n    passphrase: string;    \r\n    name: string;\r\n    latitude: number;\r\n    longitude: number;\r\n    registered: boolean;\r\n}","export default \"<p>\\n  Error 404 - Oooops, Webseite nicht gefunden!\\n</p>\\n\";","import { Component, OnInit, Input } from '@angular/core';\nimport { Commodity } from '../model/commodity';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AppComponent } from '../app.component';\nimport { Message } from '../model/message';\nimport { Communication } from '../model/communication';\nimport { User } from '../model/user';\nimport { DnsHelper } from '../helper/DnsHelper';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  @Input() cardCommodity: Commodity;\n  picUrl: string;\n  iconForFavorite: string = \"favorite_border\";\n  belongsToCurrentUser: boolean;\n\n  constructor(private http: HttpClient, private appComponent: AppComponent,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    let tempPicUrl: string = this.cardCommodity.picUrl.substring(1,\n      this.cardCommodity.picUrl.length - 1);\n    this.picUrl = new DnsHelper().url + \"/api/image/\" + tempPicUrl;\n\n    this.belongsToCurrentUser = this.cardCommodity.belongsToCurretUser;\n  }\n\n  reportAbuse(event: Event) {\n\n    this.cardCommodity.reportAbuse++;\n\n    const httpsHeaders: HttpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'cache-control': 'no-cache'\n    });\n    const httpOpt = {\n      headers: httpsHeaders\n    };\n\n    const resp2 = this.http.post<Commodity>(\n      new DnsHelper().url + '/api/commodity',\n      this.cardCommodity, httpOpt\n    );\n    resp2.subscribe(result => {\n    });\n\n  }\n\n  openMessage(event: Event) {\n\n    if (!this.belongsToCurrentUser) {\n\n      // const requester: User = new User();\n      let requesterUuId: string = this.appComponent.getCurrCookieUserId();\n      let commodityId: string = this.cardCommodity.id;\n\n      const messageToSend: Message = new Message();\n      messageToSend.messageText = \"Hello Sharty World!\";\n      messageToSend.communicationUuid = \"\";\n      messageToSend.messageOwnerUuid = requesterUuId;\n      messageToSend.commodityId = commodityId;\n\n      const httpsHeaders: HttpHeaders = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'cache-control': 'no-cache'\n      });\n      const httpOpt = {\n        headers: httpsHeaders\n      };\n\n      const resp2 = this.http.put<Message>(\n        new DnsHelper().url + '/api/communication',\n        messageToSend, httpOpt\n      );\n      resp2.subscribe(result => {\n        this.router.navigateByUrl(\"/messagecenter\");\n      });\n\n    }\n\n  }\n\n  likeCommodity(event: Event) {\n\n    const commodityToSend: Commodity = new Commodity();\n    commodityToSend.id = this.cardCommodity.id;\n    commodityToSend.uuidOfCurrUserThatLikes = this.appComponent.getCurrCookieUserId();\n    commodityToSend.likedByCurrentUser = !this.cardCommodity.likedByCurrentUser;\n\n    const httpsHeaders: HttpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'cache-control': 'no-cache'\n    });\n    const httpOpt = {\n      headers: httpsHeaders\n    };\n\n    const resp2 = this.http.post<Commodity>(\n      new DnsHelper().url + '/api/commodity/updatelike',\n      commodityToSend, httpOpt\n    );\n    resp2.subscribe(result => {\n      this.cardCommodity.likedByCurrentUser = !this.cardCommodity.likedByCurrentUser;\n    });\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MessagecenterComponent } from './messagecenter/messagecenter.component';\nimport { ImprintComponent } from './imprint/imprint.component';\nimport { MainComponent } from './main/main.component';\nimport { Error404Component } from './error404/error404.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {path: '', component: MainComponent, pathMatch: 'full'},\n  {path: 'messagecenter', component: MessagecenterComponent, pathMatch: 'full'},\n  {path: 'imprint', component: ImprintComponent, pathMatch: 'full'},\n  {path: 'login', component: LoginComponent, pathMatch: 'full'},\n  {path: 'register', component: RegisterComponent, pathMatch: 'full'},\n  {path: 'profile', component: ProfileComponent, pathMatch: 'full'},\n  // bei Fehler immer zu Error 404:\n  {path: '**', component: Error404Component, pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Commodity } from '../model/commodity';\nimport { AppComponent } from '../app.component';\nimport { UseExistingWebDriver } from 'protractor/built/driverProviders';\nimport { User } from '../model/user';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private authentication: AuthenticationService;\n  email: FormControl = new FormControl('', [Validators.required, Validators.email]);\n  passphrase: FormControl = new FormControl('', [Validators.required]);\n\n  constructor(authentication: AuthenticationService, private http: HttpClient,\n    private appComponent: AppComponent) {\n    this.authentication = authentication;\n  }\n\n  ngOnInit() {\n  }\n\n  loginTheUser(event: Event) {    \n    event.preventDefault();\n\n    this.authentication.getUserAttr(this.email.value, this.passphrase.value)\n      .subscribe(result => {\n        const user: User = result as User;\n        this.appComponent.setCurrUserCookie(user);\n      }, error => {\n        // do nothing\n      });\n\n  }\n\n  getErrorMessage(){\n    let errorText: string = \"Error unbekannt\";\n    if(this.email.hasError('reqired')){\n      errorText = 'Sie müssen eine E-Mail-Adresse eingeben';\n    } else if(this.email.hasError('email')){\n      errorText = 'Dies ist keine gültige E-Mail-Adresse';\n    }\n    return errorText;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Commodity } from '../model/commodity';\nimport { AppComponent } from '../app.component';\nimport { User } from '../model/user';\nimport { DnsHelper } from '../helper/DnsHelper';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  public displayAddCard: boolean = false;\n\n  constructor(private http: HttpClient, public appComponent: AppComponent) {\n  }\n\n  ngOnInit() {\n    navigator.geolocation.getCurrentPosition((loc) => {\n      this.getComponents(loc);  // user gives location\n    }, () => {\n      this.getComponents(null); // user gives no location\n    });\n    this.getHelloString();\n  }\n\n  private getComponents(loc){\n    const httpsHeaders: HttpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'cache-control': 'no-cache'\n    });\n\n    const httpOpt = {\n      headers: httpsHeaders\n    };\n    const user: User = new User();\n    user.uuId = this.appComponent.getCurrCookieUserId();\n    if(loc != null){\n      user.latitude = loc.coords.latitude;\n      user.longitude = loc.coords.longitude;  \n    } else {\n      user.latitude = 100.0;\n      user.longitude = 200.0;\n    }\n    const resp = this.http.get<Commodity[]>(\n      new DnsHelper().url + '/api/commodity?useruuid=' +\n              user.uuId + '&latitude=' + user.latitude + '&longitude=' +\n              user.longitude,\n      httpOpt\n    );\n    resp.subscribe(result => {\n      this.appComponent.commodities = result;\n      this.appComponent.commoditiesAll = result;\n    });\n  }\n\n  displayShareItem(event: Event) {\n\n    this.displayAddCard = !this.displayAddCard;\n\n    /*\n\n    var commodity: Commodity = new Commodity();\n    commodity.name = \"Wow2!\";\n\n    this.commodities[this.commodities.length] = commodity;\n\n    const httpsHeaders: HttpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'cache-control': 'no-cache'\n    });\n\n    const httpOpt = {\n      headers: httpsHeaders\n    };\n\n    const resp = this.http.post<Commodity>(\n      new DnsHelper().url + '/api/commodity',\n      commodity, httpOpt\n    );\n    resp.subscribe(result => {\n      console.log(\"AH: \" + JSON.stringify(result));  \n    });\n\n    */\n\n  }\n\n  helloString: string = \"Aha2\";\n  getHelloString() {\n    this.http.get(environment.apiServer).subscribe(\n      response => {\n        let responseObj: any = response as any;\n        this.helloString = responseObj.text;\n      }, error => {\n        this.helloString = \"ERROR\";\n      }\n    )\n  }\n\n}\n","export default \"<p>\\n  Benutzername: {{ userName }}<br/>\\n  Login-Name: {{ loginName }}<br/>\\n  UUID (SP&Auml;TER ENTFERNEN): {{ uuid }}<br/>  \\n  <button mat-button>KONTO L&Ouml;SCHEN</button>\\n</p>\\n\";","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}